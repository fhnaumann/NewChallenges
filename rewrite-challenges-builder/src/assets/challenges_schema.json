{
    "$ref": "#/definitions/Model",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "BlockBreakGoalConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "breakAllBlocksOnce": {
                    "default": false,
                    "description": "Every block has to be broken exactly once.",
                    "type": "boolean"
                },
                "broken": {
                    "default": [],
                    "description": "The blocks (more specifically materials) that need to be broken to beat this goal.",
                    "items": {
                        "$ref": "#/definitions/CollectableEntryConfig"
                    },
                    "type": "array"
                },
                "complete": {
                    "default": false,
                    "description": "If the goal is completed.",
                    "type": "boolean"
                },
                "fixedOrder": {
                    "default": false,
                    "description": "If true, all selected elements have to be collected/killed in a specific order.",
                    "type": "boolean"
                },
                "maxTimeSeconds": {
                    "default": 600,
                    "description": "The upper bound for determining the time that is allowed to complete a goal.\nCannot be smaller than minTimeSeconds.",
                    "maximum": 100000,
                    "minimum": 10,
                    "type": "number"
                },
                "minTimeSeconds": {
                    "default": 180,
                    "description": "The lower bound for determining the time that is allowed to complete a goal.\nCannot be bigger than maxTimeSeconds.",
                    "maximum": 100000,
                    "minimum": 10,
                    "type": "number"
                },
                "order": {
                    "default": -1,
                    "description": "Defines the ordering of other timeable goals within the same challenge.\nGoals with smaller order values are required to be completed before goals with\nlarger ones. Equal order value means that they have to be completed simultaneously.\nThe order number (= the progress in the challenge) is incremented when\nall goals for the \"current\" order number are completed. If multiple goals are currently\nrunning simultaneously, then it only increases if all of these are completed.\nGoals with no order number (= order number is -1) don't have a time limit and can be\ncompleted at any time during the active challenge.",
                    "type": "number"
                },
                "shuffled": {
                    "default": false,
                    "description": "Flag to remember whether the collectables have been shuffled or not.\nCan only ever be true if 'fixedOrder' is set to true.\nThe builder website will always set this value to false (or leave it as default).\nComing from the builder website to the minecraft server for the first time, then 'shuffled'\nwill be false, which indicates to the server to shuffle the collectables once, set 'shuffled'\nto true and therefore never re-shuffle it again (on subsequent server starts).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CollectableDataConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "amountNeeded": {
                    "default": 1,
                    "description": "The amount that needs to be collected.",
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                },
                "completion": {
                    "$ref": "#/definitions/CompletionConfig",
                    "description": "Contains information about the completion progress. This includes player names and the amount each player has contributed to the completion of this collectable."
                },
                "currentAmount": {
                    "default": 0,
                    "description": "The amount that is currently collected.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CollectableEntryConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "collectableData": {
                    "$ref": "#/definitions/CollectableDataConfig",
                    "default": {},
                    "description": "The data that is meant to be collected for this specific collectable"
                },
                "collectableName": {
                    "description": "The name of the collectable. This could, for example, be \"PIG\" (entity), \"STONE\" (material).",
                    "type": "string"
                }
            },
            "required": [
                "collectableData",
                "collectableName"
            ],
            "type": "object"
        },
        "CompletionConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "contributors": {
                    "$ref": "#/definitions/ContributorsConfig",
                    "description": "The player (names) that contributed to completing this collectable."
                },
                "whenCollectedSeconds": {
                    "default": -1,
                    "description": "The time in seconds (since the start) that it took to complete this collectable. -1 indicates that is has not been collected (e.g. 'complete' is false).",
                    "type": "integer"
                }
            },
            "required": [
                "whenCollectedSeconds"
            ],
            "type": "object"
        },
        "ContributorsConfig": {
            "additionalProperties": {
                "type": "number"
            },
            "defaultProperties": [],
            "type": "object"
        },
        "CustomHealthSettingConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "hearts": {
                    "default": 20,
                    "description": "The maximum number of hearts the players play with.",
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeathPunishmentConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "affects": {
                    "default": "all",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "all",
                        "causer"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EnabledRules": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "noBlockBreak": {
                    "$ref": "#/definitions/NoBlockBreakRuleConfig"
                }
            },
            "type": "object"
        },
        "EndPunishmentConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "affects": {
                    "default": "all",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "all",
                        "causer"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoalsConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "blockBreakGoal": {
                    "$ref": "#/definitions/BlockBreakGoalConfig"
                }
            },
            "type": "object"
        },
        "HealthPunishmentConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "affects": {
                    "default": "all",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "all",
                        "causer"
                    ],
                    "type": "string"
                },
                "heartsLost": {
                    "default": 1,
                    "description": "The amount of hearts (half hearts) that are subtracted.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "randomizeHeartsLost": {
                    "default": false,
                    "description": "If true, the amount of hearts (half hearts) that are subtracted per punishment are\nrandomized every time.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Model": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "currentOrder": {
                    "default": -1,
                    "description": "The number that represents the current order progress. Starts at 0 and increases as\ngoals with their order number are completed.\nStart: Complete all goals with order number 0.\nNext: Increase currentOrder if all goals with order number 0 are completed.\nNext: Increase currentOrder if all goals with order number 1 are completed.\nEnd: There are no challenges with a higher orderNumber left to complete.\ncurrentOrder is only relevant if not -1. -1 indicates that the challenge has no time limit\nand goals can be completed whenever (the challenge is over if all goals are completed).",
                    "type": "integer"
                },
                "goals": {
                    "$ref": "#/definitions/GoalsConfig"
                },
                "nextChallenge": {
                    "$ref": "#/definitions/Model"
                },
                "rules": {
                    "$ref": "#/definitions/RulesConfig"
                },
                "settings": {
                    "$ref": "#/definitions/SettingsConfig"
                },
                "timer": {
                    "default": 0,
                    "description": "The time (in seconds) that has passed since the challenge was started.",
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NoBlockBreakRuleConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "exemptions": {
                    "default": [],
                    "description": "List of materials that are exempted from the rule.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                },
                "result": {
                    "default": "Deny",
                    "description": "The result action when the rule is violated.",
                    "enum": [
                        "Allow",
                        "Deny"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PunishmentsConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "deathPunishment": {
                    "$ref": "#/definitions/DeathPunishmentConfig"
                },
                "endPunishment": {
                    "$ref": "#/definitions/EndPunishmentConfig"
                },
                "healthPunishment": {
                    "$ref": "#/definitions/HealthPunishmentConfig"
                },
                "randomEffectPunishment": {
                    "$ref": "#/definitions/RandomEffectPunishmentConfig"
                },
                "randomItemPunishment": {
                    "$ref": "#/definitions/RandomItemPunishmentConfig"
                }
            },
            "type": "object"
        },
        "RandomEffectPunishmentConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "affects": {
                    "default": "all",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "all",
                        "causer"
                    ],
                    "type": "string"
                },
                "effectsAtOnce": {
                    "default": 1,
                    "description": "The number of effects that are applied at once.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "randomizeEffectsAtOnce": {
                    "default": false,
                    "description": "If true, the number of effects that are applied per punishment is randomized every time.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RandomItemPunishmentConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "affects": {
                    "default": "all",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "all",
                        "causer"
                    ],
                    "type": "string"
                },
                "entireInventoryRemoved": {
                    "default": false,
                    "description": "Flag that, if true, clears the entire inventory. This is preferred over\n\"itemsRemovedAtOnce\" with the maximum value, since inventory size may vary\ndepending on other active rules/settings. Although, fundamentally it should not make\na difference.",
                    "type": "boolean"
                },
                "itemsRemovedAtOnce": {
                    "default": 1,
                    "description": "The number of items that are removed from the players inventory at once.\nInventory includes armor slots and the off-hand slot.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "number"
                },
                "randomizeItemsRemovedAtOnce": {
                    "default": false,
                    "description": "If true, the number of items that are removed from the players inventory per punishment is randomized every time.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RulesConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "enabledGlobalPunishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                },
                "enabledRules": {
                    "$ref": "#/definitions/EnabledRules"
                }
            },
            "type": "object"
        },
        "SettingsConfig": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "customHealthSetting": {
                    "$ref": "#/definitions/CustomHealthSettingConfig"
                }
            },
            "type": "object"
        }
    }
}

