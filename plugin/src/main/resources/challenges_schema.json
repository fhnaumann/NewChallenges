{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "BlockBreakGoalConfig": {
            "additionalProperties": false,
            "properties": {
                "broken": {
                    "default": [],
                    "description": "The blocks (more specifically materials) that need to be broken to beat this goal.",
                    "items": {
                        "$ref": "#/definitions/CollectableEntryConfig"
                    },
                    "type": "array"
                },
                "complete": {
                    "default": false,
                    "description": "If the goal is completed.",
                    "type": "boolean"
                },
                "fixedOrder": {
                    "default": false,
                    "description": "If true, all selected elements have to be collected/killed in a specific order.",
                    "type": "boolean"
                },
                "shuffled": {
                    "default": false,
                    "description": "Flag to remember whether the collectables have been shuffled or not.\nCan only ever be true if 'fixedOrder' is set to true.\nThe builder website will always set this value to false (or leave it as default).\nComing from the builder website to the minecraft server for the first time, then 'shuffled'\nwill be false, which indicates to the server to shuffle the collectables once, set 'shuffled'\nto true and therefore never re-shuffle it again (on subsequent server starts).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CollectableDataConfig": {
            "additionalProperties": false,
            "properties": {
                "amountNeeded": {
                    "default": 1,
                    "description": "The amount that needs to be collected.",
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                },
                "currentAmount": {
                    "default": 0,
                    "description": "The amount that is currently collected.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CollectableEntryConfig": {
            "additionalProperties": false,
            "properties": {
                "collectableData": {
                    "$ref": "#/definitions/CollectableDataConfig",
                    "default": {},
                    "description": "The data that is meant to be collected for this specific collectable"
                },
                "collectableName": {
                    "description": "The name of the collectable. This could, for example, be \"PIG\" (entity), \"STONE\" (material).",
                    "type": "string"
                },
                "completion": {
                    "$ref": "#/definitions/CompletionConfig",
                    "description": "Contains information about the completion progress. This includes player names and the amount each player has contributed to the completion of this collectable."
                }
            },
            "required": [
                "collectableData",
                "collectableName"
            ],
            "type": "object"
        },
        "CompletionConfig": {
            "additionalProperties": false,
            "properties": {
                "contributors": {
                    "$ref": "#/definitions/ContributorsConfig",
                    "description": "The player (names) that contributed to completing this collectable."
                },
                "whenCollectedSeconds": {
                    "default": -1,
                    "description": "The time in seconds (since the start) that it took to complete this collectable. -1 indicates that is has not been collected (e.g. 'complete' is false).",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContributorsConfig": {
            "additionalProperties": {
                "type": "integer"
            },
            "type": "object"
        },
        "DeathPunishmentConfig": {
            "additionalProperties": false,
            "properties": {
                "affects": {
                    "default": "All",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "All",
                        "Causer"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EnabledRules": {
            "additionalProperties": false,
            "properties": {
                "noBlockBreak": {
                    "$ref": "#/definitions/NoBlockBreakRuleConfig"
                },
                "noBlockPlace": {
                    "$ref": "#/definitions/NoBlockPlaceRuleConfig"
                },
                "noCrafting": {
                    "$ref": "#/definitions/NoCraftingRuleConfig"
                },
                "noDamage": {
                    "$ref": "#/definitions/NoDamageRuleConfig"
                },
                "noDeath": {
                    "$ref": "#/definitions/NoDeathRuleConfig"
                },
                "noItem": {
                    "$ref": "#/definitions/NoItemCollectRuleConfig"
                },
                "noMobKill": {
                    "$ref": "#/definitions/NoMobKillRuleConfig"
                }
            },
            "type": "object"
        },
        "EndPunishmentConfig": {
            "additionalProperties": false,
            "properties": {
                "affects": {
                    "default": "All",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "All",
                        "Causer"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoalsConfig": {
            "additionalProperties": false,
            "properties": {
                "blockbreakGoal": {
                    "$ref": "#/definitions/BlockBreakGoalConfig"
                },
                "itemGoal": {
                    "$ref": "#/definitions/ItemGoalConfig"
                },
                "mobGoal": {
                    "$ref": "#/definitions/MobGoalConfig"
                }
            },
            "type": "object"
        },
        "HealthPunishmentConfig": {
            "additionalProperties": false,
            "properties": {
                "affects": {
                    "default": "All",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "All",
                        "Causer"
                    ],
                    "type": "string"
                },
                "heartsLost": {
                    "default": 1,
                    "description": "The amount of hearts (half hearts) that are subtracted.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "randomizeHeartsLost": {
                    "default": false,
                    "description": "If true, the amount of hearts (half hearts) that are subtracted per punishment are\nrandomized every time.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ItemGoalConfig": {
            "additionalProperties": false,
            "properties": {
                "complete": {
                    "default": false,
                    "description": "If the goal is completed.",
                    "type": "boolean"
                },
                "fixedOrder": {
                    "default": false,
                    "description": "If true, all selected elements have to be collected/killed in a specific order.",
                    "type": "boolean"
                },
                "items": {
                    "default": [],
                    "description": "The items that need to be collected to beat this goal.",
                    "items": {
                        "$ref": "#/definitions/CollectableEntryConfig"
                    },
                    "type": "array"
                },
                "shuffled": {
                    "default": false,
                    "description": "Flag to remember whether the collectables have been shuffled or not.\nCan only ever be true if 'fixedOrder' is set to true.\nThe builder website will always set this value to false (or leave it as default).\nComing from the builder website to the minecraft server for the first time, then 'shuffled'\nwill be false, which indicates to the server to shuffle the collectables once, set 'shuffled'\nto true and therefore never re-shuffle it again (on subsequent server starts).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MobGoalConfig": {
            "additionalProperties": false,
            "properties": {
                "complete": {
                    "default": false,
                    "description": "If the goal is completed.",
                    "type": "boolean"
                },
                "fixedOrder": {
                    "default": false,
                    "description": "If true, all selected elements have to be collected/killed in a specific order.",
                    "type": "boolean"
                },
                "mobs": {
                    "default": "[\"collectableName\": \"ENDER_DRAGON\", \"collectableData\": {\"amountNeeded\": 1}]",
                    "description": "The mobs that need to be killed to beat this goal.",
                    "items": {
                        "$ref": "#/definitions/CollectableEntryConfig"
                    },
                    "type": "array"
                },
                "shuffled": {
                    "default": false,
                    "description": "Flag to remember whether the collectables have been shuffled or not.\nCan only ever be true if 'fixedOrder' is set to true.\nThe builder website will always set this value to false (or leave it as default).\nComing from the builder website to the minecraft server for the first time, then 'shuffled'\nwill be false, which indicates to the server to shuffle the collectables once, set 'shuffled'\nto true and therefore never re-shuffle it again (on subsequent server starts).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NoBlockBreakRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "exemptions": {
                    "default": [],
                    "description": "List of materials that are exempted from the rule.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                }
            },
            "type": "object"
        },
        "NoBlockPlaceRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "exemptions": {
                    "default": [],
                    "description": "List of materials that are exempted from the rule.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                }
            },
            "type": "object"
        },
        "NoCraftingRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "exemptions": {
                    "default": [],
                    "description": "List of materials that are exempted from the rule.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                }
            },
            "type": "object"
        },
        "NoDamageRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                }
            },
            "type": "object"
        },
        "NoDeathRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                }
            },
            "type": "object"
        },
        "NoItemCollectRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "exemptions": {
                    "default": [],
                    "description": "List of materials that are exempted from the rule.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                }
            },
            "type": "object"
        },
        "NoMobKillRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "exemptions": {
                    "default": [],
                    "description": "List of entity types that are exempted from the rule.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "punishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                }
            },
            "type": "object"
        },
        "PunishmentsConfig": {
            "additionalProperties": false,
            "properties": {
                "deathPunishment": {
                    "$ref": "#/definitions/DeathPunishmentConfig"
                },
                "endPunishment": {
                    "$ref": "#/definitions/EndPunishmentConfig"
                },
                "healthPunishment": {
                    "$ref": "#/definitions/HealthPunishmentConfig"
                },
                "randomEffectPunishment": {
                    "$ref": "#/definitions/RandomEffectPunishmentConfig"
                },
                "randomItemPunishment": {
                    "$ref": "#/definitions/RandomItemPunishmentConfig"
                }
            },
            "type": "object"
        },
        "RandomEffectPunishmentConfig": {
            "additionalProperties": false,
            "properties": {
                "affects": {
                    "default": "All",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "All",
                        "Causer"
                    ],
                    "type": "string"
                },
                "effectsAtOnce": {
                    "default": 1,
                    "description": "The number of effects that are applied at once.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "randomizeEffectsAtOnce": {
                    "default": false,
                    "description": "If true, the number of effects that are applied per punishment is randomized every time.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RandomItemPunishmentConfig": {
            "additionalProperties": false,
            "properties": {
                "affects": {
                    "default": "All",
                    "description": "Who is affected by the punishment.",
                    "enum": [
                        "All",
                        "Causer"
                    ],
                    "type": "string"
                },
                "entireInventoryRemoved": {
                    "default": false,
                    "description": "Flag that, if true, clears the entire inventory. This is preferred over\n\"itemsRemovedAtOnce\" with the maximum value, since inventory size may vary\ndepending on other active rules/settings. Although, fundamentally it should not make\na difference.",
                    "type": "boolean"
                },
                "itemsRemovedAtOnce": {
                    "default": 1,
                    "description": "The number of items that are removed from the players inventory at once.\nInventory includes armor slots and the off-hand slot.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "randomizeItemsRemovedAtOnce": {
                    "default": false,
                    "description": "If true, the number of items that are removed from the players inventory per punishment is randomized every time.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RulesConfig": {
            "additionalProperties": false,
            "properties": {
                "enabledGlobalPunishments": {
                    "$ref": "#/definitions/PunishmentsConfig"
                },
                "enabledRules": {
                    "$ref": "#/definitions/EnabledRules"
                }
            },
            "type": "object"
        }
    },
    "properties": {
        "goals": {
            "$ref": "#/definitions/GoalsConfig"
        },
        "rules": {
            "$ref": "#/definitions/RulesConfig"
        },
        "timer": {
            "default": 0,
            "description": "The time (in seconds) that has passed since the challenge was started.",
            "minimum": 0,
            "type": "integer"
        }
    },
    "type": "object"
}

